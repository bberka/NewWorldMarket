//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NewWorld.BiSMarket.Core.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resource() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("NewWorld.BiSMarket.Core.Properties.Resource", typeof(Resource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Abyssal IV
        ///Electrified IV
        ///Empowered IV
        ///Ignited IV
        ///Frozen IV
        ///Arboreal IV
        ///Brash IV
        ///Opportunist IV
        ///Retaliate IV
        ///Exhilarate IV
        ///Cruel IV
        ///Gambit IV
        ///Rally IV
        ///Abyssal Ward IV
        ///Fire Ward IV
        ///Lightning Ward IV
        ///Arcane Ward IV
        ///Ice Ward IV
        ///Nature Ward IV
        ///Slash Ward IV
        ///Strike Ward IV
        ///Thrust Ward IV
        ///Physical Ward IV
        ///Wilderness Ward IV
        ///Elemental Ward IV
        ///Spectral Ward IV
        ///Acid Resistance
        ///Abyssal III
        ///Electrified III
        ///Empowered III
        ///Ignited III
        ///Frozen III
        ///Arboreal III
        ///Brash III
        ///Opportunist III
        ///Re [rest of string was truncated]&quot;;.
        /// </summary>
        public static string GemList {
            get {
                return ResourceManager.GetString("GemList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Empowering Whirling Blade
        ///Empowering Leaping Strike
        ///Bleeding Sweep
        ///Sundering Javeli
        ///Leeching Cyclone
        ///Fortifying Perforate
        ///Enfeebling Skewer
        ///Keen Vault Kick
        ///Voracious Blade
        ///Nullifying Oblivion
        ///Putrefying Scream
        ///Diminishing Orb
        ///Slowing Tether
        ///Refreshing Rupture
        ///Empowering Armor Breaker
        ///Refreshing Mighty Gavel
        ///Penetrating Wrecking Ball
        ///Sundering Shockwave
        ///Repulsing Clear Out
        ///Leeching Path Of Destiny
        ///Sturdy
        ///Sure Footing
        ///Refreshing
        ///Refreshing Ward
        ///Refreshing Evasi
        ///Keen
        ///Enchanted
        ///Ruinou [rest of string was truncated]&quot;;.
        /// </summary>
        public static string PerkListV2 {
            get {
                return ResourceManager.GetString("PerkListV2", resourceCulture);
            }
        }
    }
}
